/**
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TalononeApi) {
      root.TalononeApi = {};
    }
    root.TalononeApi.InlineResponse2008Data = factory(root.TalononeApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The InlineResponse2008Data model module.
   * @module model/InlineResponse2008Data
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>InlineResponse2008Data</code>.
   * 
   * @alias module:model/InlineResponse2008Data
   * @class
   * @param id {Number} Unique ID for this entity.
   * @param created {Date} The exact moment this entity was created.
   * @param modified {Date} The exact moment this entity was last modified.
   * @param accountId {Number} The ID of the account that owns this entity.
   * @param name {String} The name of this API key.
   * @param roleId {Number} ID of the role to be used.
   * @param token {String} Token for the API Key.
   * @param usageCount {Number} Number of times the API key was used.
   * @param lastUsed {Date} Timestamp of the last usage of the API key.
   */
  var exports = function(id, created, modified, accountId, name, roleId, token, usageCount, lastUsed) {
    var _this = this;

    _this['id'] = id;
    _this['created'] = created;
    _this['modified'] = modified;
    _this['accountId'] = accountId;
    _this['name'] = name;

    _this['roleId'] = roleId;

    _this['token'] = token;
    _this['usageCount'] = usageCount;
    _this['lastUsed'] = lastUsed;
  };

  /**
   * Constructs a <code>InlineResponse2008Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2008Data} obj Optional instance to populate.
   * @return {module:model/InlineResponse2008Data} The populated <code>InlineResponse2008Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('created')) {
        obj['created'] = ApiClient.convertToType(data['created'], 'Date');
      }
      if (data.hasOwnProperty('modified')) {
        obj['modified'] = ApiClient.convertToType(data['modified'], 'Date');
      }
      if (data.hasOwnProperty('accountId')) {
        obj['accountId'] = ApiClient.convertToType(data['accountId'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('roleId')) {
        obj['roleId'] = ApiClient.convertToType(data['roleId'], 'Number');
      }
      if (data.hasOwnProperty('applicationId')) {
        obj['applicationId'] = ApiClient.convertToType(data['applicationId'], 'Number');
      }
      if (data.hasOwnProperty('token')) {
        obj['token'] = ApiClient.convertToType(data['token'], 'String');
      }
      if (data.hasOwnProperty('usageCount')) {
        obj['usageCount'] = ApiClient.convertToType(data['usageCount'], 'Number');
      }
      if (data.hasOwnProperty('lastUsed')) {
        obj['lastUsed'] = ApiClient.convertToType(data['lastUsed'], 'Date');
      }
    }
    return obj;
  }

  /**
   * Unique ID for this entity.
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The exact moment this entity was created.
   * @member {Date} created
   */
  exports.prototype['created'] = undefined;
  /**
   * The exact moment this entity was last modified.
   * @member {Date} modified
   */
  exports.prototype['modified'] = undefined;
  /**
   * The ID of the account that owns this entity.
   * @member {Number} accountId
   */
  exports.prototype['accountId'] = undefined;
  /**
   * The name of this API key.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * A longer description of the API key.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * ID of the role to be used.
   * @member {Number} roleId
   */
  exports.prototype['roleId'] = undefined;
  /**
   * ID of the application to be used for integration requests.
   * @member {Number} applicationId
   */
  exports.prototype['applicationId'] = undefined;
  /**
   * Token for the API Key.
   * @member {String} token
   */
  exports.prototype['token'] = undefined;
  /**
   * Number of times the API key was used.
   * @member {Number} usageCount
   */
  exports.prototype['usageCount'] = undefined;
  /**
   * Timestamp of the last usage of the API key.
   * @member {Date} lastUsed
   */
  exports.prototype['lastUsed'] = undefined;



  return exports;
}));


